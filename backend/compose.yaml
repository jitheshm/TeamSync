services:

  # redpanda-0:
  #   image: docker.redpanda.com/redpandadata/redpanda:v23.2.21
  #   container_name: redpanda-0
  #   command:
  #     - redpanda
  #     - start
  #     - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
  #     - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
  #     - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
  #     - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
  #     - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
  #     - --rpc-addr redpanda-0:33145
  #     - --advertise-rpc-addr redpanda-0:33145
  #     - --smp 1
  #     - --memory 1G
  #     - --mode dev-container
  #     # - --default-log-level=debug
  #   volumes:
  #     - redpanda-0:/var/lib/redpanda/data
  #   ports:
  #     - 18081:18081   # Schema Registry HTTP port
  #     - 18082:18082   # Pandaproxy HTTP port
  #     - 19092:19092   # Kafka port
  #     - 19644:9644    # Redpanda Admin API port
  #   networks:
  #     - team_sync_network

  # console:
  #   image: docker.redpanda.com/redpandadata/console:v2.6.0
  #   entrypoint: /bin/sh
  #   command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
  #   environment:
  #     CONFIG_FILEPATH: /tmp/config.yml
  #     CONSOLE_CONFIG_FILE: |
  #       kafka:
  #         brokers: ["redpanda-0:9092"]
  #         schemaRegistry:
  #           enabled: true
  #           urls: ["http://redpanda-0:8081"]
  #       redpanda:
  #         adminApi:
  #           enabled: true
  #           urls: ["http://redpanda-0:9644"]
  #       connect:
  #         enabled: true
  #         clusters:
  #           - name: local-connect-cluster
  #             url: http://connect:8083
  #   ports:
  #     - 8080:8080
  #   networks:
  #     - team_sync_network
  #   depends_on:
  #     - redpanda-0

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
    depends_on:
      - zookeeper
    networks:
      - team_sync_network

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - team_sync_network


  stripe-cli:
    image: stripe/stripe-cli
    container_name: stripe-cli
    command: "listen --api-key ${STRIPE_API_KEY} --forward-to nginx:80/api/subscription-service/v1/webhook"
    env_file:
      - .env
    networks:
      - team_sync_network
  
  userservice:
    build: ./services/userService
    container_name: team-sync-user-service
    image: jitheshmjithooz/team-sync-user-service
    restart: unless-stopped
    env_file:
      - ./services/userService/.env
    depends_on:
      - kafka
    ports:
      - 3007:3007
    networks: 
      - team_sync_network
    develop:
      watch:
        - action: sync
          path: ./services/userService
          target: /app/
          ignore:
            - node_modules/
        - action: rebuild
          path: ./services/userService/package.json

  notificationservice:
    build: ./services/notificationService
    container_name: team-sync-notification-service
    image: jitheshmjithooz/team-sync-notification-service
    restart: unless-stopped
    env_file:
      - ./services/notificationService/.env
    depends_on:
      - kafka
    ports:
      - 3001:3001
    networks: 
      - team_sync_network
    develop:
      watch:
        - action: sync
          path: ./services/notificationService
          target: /app/
          ignore:
            - node_modules/
        - action: rebuild
          path: ./services/notificationService/package.json

  authenticationservice:
    build: ./services/authenticationService
    container_name: team-sync-authentication-service
    image: jitheshmjithooz/team-sync-authentication-service
    restart: unless-stopped
    env_file:
      - ./services/authenticationService/.env
    depends_on:
      - kafka
    ports:
      - 3002:3002
    networks: 
      - team_sync_network
    develop:
      watch:
        - action: sync
          path: ./services/authenticationService
          target: /app/
          ignore:
            - node_modules/
        - action: rebuild
          path: ./services/authenticationService/package.json

  subscriptionservice:
    build: ./services/subscriptionService
    container_name: team-sync-subscription-service
    image: jitheshmjithooz/team-sync-subscription-service
    restart: unless-stopped
    env_file:
      - ./services/subscriptionService/.env
    depends_on:
      - kafka
    ports:
      - 3003:3003
    networks: 
      - team_sync_network
    develop:
      watch:
        - action: sync
          path: ./services/subscriptionService
          target: /app/
          ignore:
            - node_modules/
        - action: rebuild
          path: ./services/subscriptionService/package.json

  tenantservice:
    build: ./services/tenantService
    container_name: team-sync-tenant-service
    image: jitheshmjithooz/team-sync-tenant-service
    restart: unless-stopped
    env_file:
      - ./services/tenantService/.env
    depends_on:
      - kafka
    ports:
      - 3004:3004
    networks: 
      - team_sync_network
    develop:
      watch:
        - action: sync
          path: ./services/tenantService
          target: /app/
          ignore:
            - node_modules/
        - action: rebuild
          path: ./services/tenantService/package.json

  projectservice:
    build: ./services/projectService
    container_name: team-sync-project-service
    image: jitheshmjithooz/team-sync-project-service
    restart: unless-stopped
    env_file:
      - ./services/projectService/.env
    depends_on:
      - kafka
    ports:
      - 3005:3005
    networks: 
      - team_sync_network
    develop:
      watch:
        - action: sync
          path: ./services/projectService
          target: /app/
          ignore:
            - node_modules/
        - action: rebuild
          path: ./services/projectService/package.json

  communicationservice:
    build: ./services/communicationService
    container_name: team-sync-communication-service
    image: jitheshmjithooz/team-sync-communication-service
    restart: unless-stopped
    env_file:
      - ./services/communicationService/.env
    depends_on:
      - kafka
    ports:
      - 3006:3006
    networks: 
      - team_sync_network
    develop:
      watch:
        - action: sync
          path: ./services/communicationService
          target: /app/
          ignore:
            - node_modules/
        - action: rebuild
          path: ./services/communicationService/package.json

  nginx:
    build: ./gateway
    container_name: team-sync-nginx-gateway
    image: jitheshmjithooz/team-sync-nginx-gateway
    ports:
      - 8000:80
    networks:
      - team_sync_network
    depends_on:
      - authenticationservice
      - subscriptionservice
      - tenantservice
      - userservice



networks:
  team_sync_network:
    driver: bridge


