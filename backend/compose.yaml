services:

  redpanda-0:
    image: docker.redpanda.com/redpandadata/redpanda:v23.2.21
    container_name: redpanda-0
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      - --smp 1
      - --memory 1G
      - --mode dev-container
      # - --default-log-level=debug
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    ports:
      - 18081:18081   # Schema Registry HTTP port
      - 18082:18082   # Pandaproxy HTTP port
      - 19092:19092   # Kafka port
      - 19644:9644    # Redpanda Admin API port
    networks:
      - team_sync_network

  console:
    image: docker.redpanda.com/redpandadata/console:v2.6.0
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
        connect:
          enabled: true
          clusters:
            - name: local-connect-cluster
              url: http://connect:8083
    ports:
      - 8080:8080
    networks:
      - team_sync_network
    depends_on:
      - redpanda-0
  
  userservice:
    build: ./services/userService
    container_name: team-sync-user-service
    image: jitheshmjithooz/team-sync-user-service
    restart: unless-stopped
    env_file:
      - ./services/userService/.env
    depends_on:
      - redpanda-0
    ports:
      - 3000:3000
    networks: 
      - team_sync_network
    develop:
      watch:
        - action: sync
          path: ./services/userService
          target: /app/
          ignore:
            - node_modules/
        - action: rebuild
          path: ./services/userService/package.json

  notificationservice:
    build: ./services/notificationService
    container_name: team-sync-notification-service
    image: jitheshmjithooz/team-sync-notification-service
    restart: unless-stopped
    env_file:
      - ./services/notificationService/.env
    depends_on:
      - redpanda-0
    ports:
      - 3001:3001
    networks: 
      - team_sync_network
    develop:
      watch:
        - action: sync
          path: ./services/notificationService
          target: /app/
          ignore:
            - node_modules/
        - action: rebuild
          path: ./services/notificationService/package.json

  authenticationservice:
    build: ./services/authenticationService
    container_name: team-sync-authentication-service
    image: jitheshmjithooz/team-sync-authentication-service
    restart: unless-stopped
    env_file:
      - ./services/authenticationService/.env
    depends_on:
      - redpanda-0
    ports:
      - 3002:3002
    networks: 
      - team_sync_network
    develop:
      watch:
        - action: sync
          path: ./services/authenticationService
          target: /app/
          ignore:
            - node_modules/
        - action: rebuild
          path: ./services/authenticationService/package.json



networks:
  team_sync_network:
    driver: bridge

volumes:
  redpanda-0: null
